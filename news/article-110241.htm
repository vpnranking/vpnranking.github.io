<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnranking.github.io/news/article-110241.htm" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Linux  C++  实现一个简易版的ping （也就是ICMP协议）</title>
        <meta name="description" content="想实现一个在没外网的时候就自动重启路由器的功能。 又不想用ping命令，因为在代码里调用system("ping"); 可能会比较耗时，得单开线程。于是找了个实现ICMP协议的代码。 参考：https" />
        <link rel="icon" href="/assets/website/img/clashmihomo/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="推荐免费VPN排名 订阅机场节点中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnranking.github.io/news/article-110241.htm" />
    <meta property="og:site_name" content="推荐免费VPN排名 订阅机场节点中文网" />
    <meta property="og:title" content="Linux  C++  实现一个简易版的ping （也就是ICMP协议）" />
    <meta property="og:image" content="https://vpnranking.github.io/uploads/20240920-1/c0ce2932251dc378ac9e0524500a340f.webp" />
        <meta property="og:release_date" content="2025-05-03T10:27:49" />
    <meta property="og:updated_time" content="2025-05-03T10:27:49" />
        <meta property="og:description" content="想实现一个在没外网的时候就自动重启路由器的功能。 又不想用ping命令，因为在代码里调用system("ping"); 可能会比较耗时，得单开线程。于是找了个实现ICMP协议的代码。 参考：https" />
        
    <!-- fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/bootstrap/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/animate/animate.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/fontawesome/css/all.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/jarallax/jarallax.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/jquery-magnific-popup/jquery.magnific-popup.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/nouislider/nouislider.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/nouislider/nouislider.pips.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/odometer/odometer.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/swiper/swiper.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/kitecx-icons/style.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/tiny-slider/tiny-slider.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/reey-font/stylesheet.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/owl-carousel/owl.carousel.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/owl-carousel/owl.theme.default.min.css" />
    <link rel="stylesheet" href="/assets/website/js/frontend/clashmihomo/twentytwenty/twentytwenty.css" />
    <!-- template styles -->
    <link rel="stylesheet" href="/assets/website/css/clashmihomo/kitecx.css" />
    <link rel="stylesheet" href="/assets/website/css/clashmihomo/kitecx-responsive.css" />
    <link rel="stylesheet" href="/assets/website/css/G.css" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Linux  C++  实现一个简易版的ping （也就是ICMP协议）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-NTDMVXZVYN"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-NTDMVXZVYN');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="preloader">
        <img class="preloader__image" width="60" src="assets/images/loader.png" alt="" />
    </div>
    <!-- /.preloader -->
    <div class="page-wrapper">
                <header class="main-header clearfix">
            <div class="container">
                <div class="main-menu-wrapper">
                    <div class="main-header__logo">
                                                <a href="/">
                            <span>推荐免费VPN排名</span>
                        </a>
                                            </div>
                    <div class="main-menu-wrapper__bottom">
                        <nav class="main-menu">
                            <div class="main-menu__inner">
                                <a href="#" class="mobile-nav__toggler"><i class="fa fa-bars"></i></a>
                                <ul class="main-menu__list">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                    </ul>
                                
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </header>
        <div class="stricky-header stricked-menu main-menu">
            <div class="sticky-header__content"></div><!-- /.sticky-header__content -->
        </div><!-- /.stricky-header -->
        <!--Page Header Start-->
        <section class="page-header" style="background-image: url(/assets/website/img/clashmihomo/backgrounds/page-header-bg.jpg);">
            <div class="page-header-border"></div>
            <div class="page-header-border page-header-border-two"></div>
            <div class="page-header-border page-header-border-three"></div>
            <div class="page-header-border page-header-border-four"></div>
            <div class="page-header-border page-header-border-five"></div>
            <div class="page-header-border page-header-border-six"></div>
            <div class="container">
                <div class="page-header__inner">
                    <h1>Linux  C++  实现一个简易版的ping （也就是ICMP协议）</h1>
                    <ul class="thm-breadcrumb list-unstyled">
                        <li><a href="/">首页</a></li>
                        <li><span>/</span></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li><span>/</span></li>
                        <li>正文</li>
                    </ul>
                </div>
            </div>
        </section>
        <!--Page Header End-->
        <!--Welcome One Start-->
        <section class="welcome-one py-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				</h1> <p>想实现一个在没外网的时候就自动重启路由器的功能。</p> <p>又不想用ping命令，因为在代码里调用system("ping"); 可能会比较耗时，得单开线程。于是找了个实现ICMP协议的代码。</p> <p>参考：https://blog.csdn.net/qivan/article/details/7237051</p> </h1> <div class="cnblogs_code"> <pre>#include &lt;stdio.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;sys/socket.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;netinet/<span style="color: rgba(0, 0, 255, 1)">in</span>.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;netinet/ip.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;netinet/ip_icmp.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;arpa/inet.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;sys/types.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;sys/time.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;unistd.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;netdb.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;<span style="color: rgba(0, 0, 255, 1)">string</span>.h&gt;<span style="color: rgba(0, 0, 255, 1)">#define</span> PACKET_SIZE     4096<span style="color: rgba(0, 0, 255, 1)">#define</span> ERROR           0<span style="color: rgba(0, 0, 255, 1)">#define</span> SUCCESS         1<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">效验算法（百度下有注释，但是还是看不太明白）</span> unsigned<span style="color: rgba(0, 0, 255, 1)">short</span> cal_chksum(unsigned<span style="color: rgba(0, 0, 255, 1)">short</span> *addr,<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> len) {</span><span style="color: rgba(0, 0, 255, 1)">int</span> nleft=<span style="color: rgba(0, 0, 0, 1)">len;</span><span style="color: rgba(0, 0, 255, 1)">int</span> sum=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;     unsigned</span><span style="color: rgba(0, 0, 255, 1)">short</span> *w=<span style="color: rgba(0, 0, 0, 1)">addr;     unsigned</span><span style="color: rgba(0, 0, 255, 1)">short</span> answer=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">while</span>(nleft &gt;<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)     {         sum</span>+= *w++<span style="color: rgba(0, 0, 0, 1)">;         nleft</span>-=<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">;     }</span><span style="color: rgba(0, 0, 255, 1)">if</span>( nleft ==<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)     {</span>*(unsigned<span style="color: rgba(0, 0, 255, 1)">char</span> *)(&amp;answer) = *(unsigned<span style="color: rgba(0, 0, 255, 1)">char</span> *<span style="color: rgba(0, 0, 0, 1)">)w;         sum</span>+=<span style="color: rgba(0, 0, 0, 1)"> answer;     }          sum</span>= (sum &gt;&gt;<span style="color: rgba(128, 0, 128, 1)">16</span>) + (sum &amp;<span style="color: rgba(128, 0, 128, 1)">0xffff</span><span style="color: rgba(0, 0, 0, 1)">);     sum</span>+= (sum &gt;&gt;<span style="color: rgba(128, 0, 128, 1)">16</span><span style="color: rgba(0, 0, 0, 1)">);     answer</span>= ~<span style="color: rgba(0, 0, 0, 1)">sum;</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> answer; }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Ping函数</span><span style="color: rgba(0, 0, 255, 1)">int</span> ping(<span style="color: rgba(0, 0, 255, 1)">char</span> *ips,<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> timeout)   {</span><span style="color: rgba(0, 0, 255, 1)">struct</span> timeval *<span style="color: rgba(0, 0, 0, 1)">tval;</span><span style="color: rgba(0, 0, 255, 1)">int</span> maxfds =<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;       fd_set readfds;</span><span style="color: rgba(0, 0, 255, 1)">struct</span><span style="color: rgba(0, 0, 0, 1)"> sockaddr_in addr;</span><span style="color: rgba(0, 0, 255, 1)">struct</span> sockaddr_in<span style="color: rgba(0, 0, 255, 1)">from</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设定Ip信息</span>     bzero(&amp;addr,<span style="color: rgba(0, 0, 255, 1)">sizeof</span><span style="color: rgba(0, 0, 0, 1)">(addr));       addr.sin_family</span>=<span style="color: rgba(0, 0, 0, 1)"> AF_INET;        addr.sin_addr.s_addr</span>=<span style="color: rgba(0, 0, 0, 1)"> inet_addr(ips);</span><span style="color: rgba(0, 0, 255, 1)">#if</span> 1<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> sockfd;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 取得socket  。  如果没加sudo 这里会报错</span>     sockfd =<span style="color: rgba(0, 0, 0, 1)"> socket(AF_INET, SOCK_RAW, IPPROTO_ICMP);</span><span style="color: rgba(0, 0, 255, 1)">if</span> (sockfd &lt;<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)       {           printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,socket error\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;       }</span><span style="color: rgba(0, 0, 255, 1)">struct</span><span style="color: rgba(0, 0, 0, 1)"> timeval timeo;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设定TimeOut时间</span>     timeo.tv_sec = timeout /<span style="color: rgba(128, 0, 128, 1)">1000</span><span style="color: rgba(0, 0, 0, 1)">;       timeo.tv_usec</span>= timeout %<span style="color: rgba(128, 0, 128, 1)">1000</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">if</span> (setsockopt(sockfd, SOL_SOCKET, SO_SNDTIMEO, &amp;timeo,<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(timeo)) == -<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)       {           printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,setsockopt error\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;       }</span><span style="color: rgba(0, 0, 255, 1)">char</span><span style="color: rgba(0, 0, 0, 1)"> sendpacket[PACKET_SIZE];</span><span style="color: rgba(0, 0, 255, 1)">char</span><span style="color: rgba(0, 0, 0, 1)"> recvpacket[PACKET_SIZE];</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设定Ping包</span>     memset(sendpacket,<span style="color: rgba(128, 0, 128, 1)">0</span>,<span style="color: rgba(0, 0, 255, 1)">sizeof</span><span style="color: rgba(0, 0, 0, 1)">(sendpacket));            pid_t pid;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 取得PID，作为Ping的Sequence ID</span>     pid=<span style="color: rgba(0, 0, 0, 1)">getpid();</span><span style="color: rgba(0, 0, 255, 1)">struct</span> ip *<span style="color: rgba(0, 0, 0, 1)">iph;</span><span style="color: rgba(0, 0, 255, 1)">struct</span> icmp *<span style="color: rgba(0, 0, 0, 1)">icmp;               icmp</span>=(<span style="color: rgba(0, 0, 255, 1)">struct</span> icmp*<span style="color: rgba(0, 0, 0, 1)">)sendpacket;       icmp</span>-&gt;icmp_type=ICMP_ECHO;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">回显请求</span>     icmp-&gt;icmp_code=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;       icmp</span>-&gt;icmp_cksum=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;       icmp</span>-&gt;icmp_seq=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;       icmp</span>-&gt;icmp_id=<span style="color: rgba(0, 0, 0, 1)">pid;      tval</span>= (<span style="color: rgba(0, 0, 255, 1)">struct</span> timeval *)icmp-&gt;<span style="color: rgba(0, 0, 0, 1)">icmp_data;       gettimeofday(tval,NULL);       icmp</span>-&gt;icmp_cksum=cal_chksum((unsigned<span style="color: rgba(0, 0, 255, 1)">short</span> *)icmp,<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(<span style="color: rgba(0, 0, 255, 1)">struct</span> icmp));<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">校验</span><span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> n;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 发包 。可以把这个发包挪到循环里面去。</span>     n = sendto(sockfd, (<span style="color: rgba(0, 0, 255, 1)">char</span> *)&amp;sendpacket,<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(<span style="color: rgba(0, 0, 255, 1)">struct</span> icmp),<span style="color: rgba(128, 0, 128, 1)">0</span>, (<span style="color: rgba(0, 0, 255, 1)">struct</span> sockaddr *)&amp;addr,<span style="color: rgba(0, 0, 255, 1)">sizeof</span><span style="color: rgba(0, 0, 0, 1)">(addr));</span><span style="color: rgba(0, 0, 255, 1)">if</span> (n &lt;<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)       {           printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,sendto error\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;       }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 接受</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 由于可能接受到其他Ping的应答消息，所以这里要用循环</span><span style="color: rgba(0, 0, 255, 1)">while</span>(<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)       {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设定TimeOut时间，这次才是真正起作用的</span>         FD_ZERO(&amp;<span style="color: rgba(0, 0, 0, 1)">readfds);           FD_SET(sockfd,</span>&amp;<span style="color: rgba(0, 0, 0, 1)">readfds);           maxfds</span>= sockfd +<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">;           n</span>=<span style="color: rgba(0, 0, 255, 1)">select</span>(maxfds, &amp;readfds, NULL, NULL, &amp;<span style="color: rgba(0, 0, 0, 1)">timeo);</span><span style="color: rgba(0, 0, 255, 1)">if</span> (n &lt;=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)           {                       printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,Time out error\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips);               close(sockfd);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;           }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 接受</span>         memset(recvpacket,<span style="color: rgba(128, 0, 128, 1)">0</span>,<span style="color: rgba(0, 0, 255, 1)">sizeof</span><span style="color: rgba(0, 0, 0, 1)">(recvpacket));</span><span style="color: rgba(0, 0, 255, 1)">int</span> fromlen =<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(<span style="color: rgba(0, 0, 255, 1)">from</span><span style="color: rgba(0, 0, 0, 1)">);           n</span>= recvfrom(sockfd, recvpacket,<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(recvpacket),<span style="color: rgba(128, 0, 128, 1)">0</span>, (<span style="color: rgba(0, 0, 255, 1)">struct</span> sockaddr *)&amp;<span style="color: rgba(0, 0, 255, 1)">from</span>, (socklen_t *)&amp;<span style="color: rgba(0, 0, 0, 1)">fromlen);       printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">recvfrom Len:%d\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,n);</span><span style="color: rgba(0, 0, 255, 1)">if</span> (n &lt;<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)      {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;           }</span><span style="color: rgba(0, 0, 255, 1)">char</span> *from_ip = (<span style="color: rgba(0, 0, 255, 1)">char</span> *)inet_ntoa(<span style="color: rgba(0, 0, 255, 1)">from</span><span style="color: rgba(0, 0, 0, 1)">.sin_addr);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 判断是否是自己Ping的回复</span><span style="color: rgba(0, 0, 255, 1)">if</span> (strcmp(from_ip,ips) !=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)           {               printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">NowPingip:%s Fromip:%s NowPingip is not same to Fromip,so ping wrong!\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips,from_ip);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;         }                    iph</span>= (<span style="color: rgba(0, 0, 255, 1)">struct</span> ip *<span style="color: rgba(0, 0, 0, 1)">)recvpacket;                    icmp</span>=(<span style="color: rgba(0, 0, 255, 1)">struct</span> icmp *)(recvpacket + (iph-&gt;ip_hl&lt;&lt;<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">));                    printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,icmp-&gt;icmp_type:%d,icmp-&gt;icmp_id:%d\n</span><span style="color: rgba(128, 0, 0, 1)">"</span>,ips,icmp-&gt;icmp_type,icmp-&gt;<span style="color: rgba(0, 0, 0, 1)">icmp_id);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 判断Ping回复包的状态</span><span style="color: rgba(0, 0, 255, 1)">if</span> (icmp-&gt;icmp_type == ICMP_ECHOREPLY &amp;&amp; icmp-&gt;icmp_id == pid)<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">ICMP_ECHOREPLY回显应答</span><span style="color: rgba(0, 0, 0, 1)">        {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 正常就退出循环</span>         printf(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">icmp succecss .............  \n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">break</span><span style="color: rgba(0, 0, 0, 1)">;           }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">           {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 否则继续等</span><span style="color: rgba(0, 0, 255, 1)">continue</span><span style="color: rgba(0, 0, 0, 1)">;           }       }</span><span style="color: rgba(0, 0, 255, 1)">#endif</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> SUCCESS; }</span><span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> main() {</span><span style="color: rgba(0, 0, 255, 1)">#if</span> 1<span style="color: rgba(0, 0, 255, 1)">char</span> cPing[<span style="color: rgba(128, 0, 128, 1)">16</span><span style="color: rgba(0, 0, 0, 1)">];     printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Please input ping IP:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);     scanf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%s</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,cPing);</span><span style="color: rgba(0, 0, 255, 1)">#else</span><span style="color: rgba(0, 0, 255, 1)">char</span> *cPing =<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">192.168.1.200</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">#endif</span><span style="color: rgba(0, 0, 255, 1)">if</span>(ping(cPing,<span style="color: rgba(128, 0, 128, 1)">10000</span><span style="color: rgba(0, 0, 0, 1)">))     {         printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Ping succeed!\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);     }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">     {         printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Ping wrong!\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);     }</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;     }</span></pre> </div> </h1> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/5da809c6847ea3937caed0e459c6659b.jpg" alt="Linux  C++  实现一个简易版的ping （也就是ICMP协议）"></p> </h1> <p>0）直接用参考链接上的代码时编译不过，不知道是不是因为我用的是cpp，没太深究。</p> <p>1）实际使用的时候需要加上sudo，不然在创建套接字那个地方会报错。我还没想好怎么在代码里用sudo，（因为实际项目运行起来是不需要加sudo的）。</p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-109402.htm">宠物粮食品牌取名怎么取的 宠物粮食品牌取名怎么取的好听</a></p>
                                        <p>下一个：<a href="/news/article-110245.htm">动物接种是什么意思（动物接种要点）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-103591.htm" title="vue组件间（父子、兄弟、跨级组件）的传值">vue组件间（父子、兄弟、跨级组件）的传值</a></li>
                        <li class="py-2"><a href="/news/article-97599.htm" title="农大动物医院医生排班（农大动物医院 挂号）">农大动物医院医生排班（农大动物医院 挂号）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-1-clash-v2ray-ss-ssr.htm" title="推荐免费VPN排名 | 5月1日21.6M/S|免费Shadowrocket/V2ray/Clash/SSR免费节点订阅分享">推荐免费VPN排名 | 5月1日21.6M/S|免费Shadowrocket/V2ray/Clash/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-free-subscribe-node.htm" title="推荐免费VPN排名 | 4月4日20.1M/S|免费Clash/SSR/Shadowrocket/V2ray免费节点订阅分享">推荐免费VPN排名 | 4月4日20.1M/S|免费Clash/SSR/Shadowrocket/V2ray免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-101967.htm" title="cors-filter使用，cors-filter解决跨域访问，cors-filter跨域请求">cors-filter使用，cors-filter解决跨域访问，cors-filter跨域请求</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-19-free-high-speed-nodes.htm" title="推荐免费VPN排名 | 4月19日22.8M/S|免费Clash/V2ray/Shadowrocket/SSR免费节点订阅分享">推荐免费VPN排名 | 4月19日22.8M/S|免费Clash/V2ray/Shadowrocket/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-100604.htm" title="“TypeError: Cannot read property ‘xxx‘ of undefined“报错情况分析">“TypeError: Cannot read property ‘xxx‘ of undefined“报错情况分析</a></li>
                        <li class="py-2"><a href="/news/article-107724.htm" title="动物医院需要什么设备才能进去 动物医院需要什么设备才能进去呢">动物医院需要什么设备才能进去 动物医院需要什么设备才能进去呢</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-6-free-node-subscribe.htm" title="推荐免费VPN排名 | 5月6日22.1M/S|免费Clash/Shadowrocket/V2ray/SSR免费节点订阅分享">推荐免费VPN排名 | 5月6日22.1M/S|免费Clash/Shadowrocket/V2ray/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-106046.htm" title="远程访问服务器Jupyter Notebook (浏览器访问和pycharm访问)">远程访问服务器Jupyter Notebook (浏览器访问和pycharm访问)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">14</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">86</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!--Welcome One End-->
    </div><!-- /.page-wrapper -->
        <footer class="site-footer">
        <div class="site-footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-xl-12">
                        <div class="site-footer-bottom__inner">
                            <div class="site-footer-bottom__left">
                                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                                <p>
                                    <a href="/">推荐免费VPN排名 订阅机场节点中文网</a> 版权所有 Powered by WordPress
                                </p>
                            </div>
                            <ul class="site-footer-bottom__menu list-unstyled">
                                <li><a href="#">Privacy Policy</a></li>
                                <li><a href="#">Terms of Condition</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <div class="mobile-nav__wrapper">
        <div class="mobile-nav__overlay mobile-nav__toggler"></div>
        <!-- /.mobile-nav__overlay -->
        <div class="mobile-nav__content">
            <span class="mobile-nav__close mobile-nav__toggler"></span>
            <div class="logo-box">
                <a href="/" aria-label="logo image">Clash Mihomo</a>
            </div>
            <!-- /.logo-box -->
            <div class="mobile-nav__container"></div>
            <!-- /.mobile-nav__container -->
            <div class="mobile-nav__top">
                <div class="mobile-nav__social">
                    <a href="#" class="fab fa-twitter"></a>
                    <a href="#" class="fab fa-facebook-square"></a>
                    <a href="#" class="fab fa-pinterest-p"></a>
                    <a href="#" class="fab fa-instagram"></a>
                </div><!-- /.mobile-nav__social -->
            </div><!-- /.mobile-nav__top -->
        </div>
        <!-- /.mobile-nav__content -->
    </div>
    <!-- /.mobile-nav__wrapper -->
    <div class="side-menu__block">
        <div class="side-menu__block-overlay custom-cursor__overlay side-menu__toggler">
            <div class="cursor"></div>
            <div class="cursor-follower"></div>
        </div><!-- /.side-menu__block-overlay -->
        <div class="side-menu__block-inner ">
            <p class="side-menu__block__text site-footer__copy-text">Copyright &copy; 2021.Company name All rights reserved.<a target="_blank" href="https://sc.chinaz.com/moban/">&#x7F51;&#x9875;&#x6A21;&#x677F;</a></p>
        </div><!-- /.side-menu__block-inner -->
    </div><!-- /.side-menu__block -->
    <a href="#" data-target="html" class="scroll-to-target scroll-to-top"><i class="fa fa-angle-up"></i></a>
    <script src="/assets/website/js/frontend/clashmihomo/jquery/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/jarallax/jarallax.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/jquery-ajaxchimp/jquery.ajaxchimp.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/jquery-appear/jquery.appear.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/jquery-circle-progress/jquery.circle-progress.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/jquery-magnific-popup/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/jquery-validate/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/nouislider/nouislider.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/odometer/odometer.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/swiper/swiper.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/tiny-slider/tiny-slider.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/wnumb/wNumb.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/wow/wow.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/isotope/isotope.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/countdown/countdown.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/owl-carousel/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/twentytwenty/twentytwenty.js"></script>
    <script src="/assets/website/js/frontend/clashmihomo/twentytwenty/jquery.event.move.js"></script>
    <script src="http://ditu.google.cn/maps/api/js?key=AIzaSyATY4Rxc8jNvDpsK8ZetC7JyN4PFVYGCGM"></script>
    <!-- template js -->
    <script src="/assets/website/js/frontend/clashmihomo/kitecx.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>